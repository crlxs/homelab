---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: prometheus-nfs-pv
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  claimRef:
    namespace: monitoring
    name: prometheus-nfs-pvc
  mountOptions:
    - hard
    - nfsvers=4.1
  nfs:
    path: /mnt/prometheus
    server: 172.17.0.1
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-nfs-pvc
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |-
    global:
      scrape_interval: 5s
      evaluation_interval: 5s
    scrape_configs:
      - job_name: 'node-exporter'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
        - source_labels: [__meta_kubernetes_endpoints_name]
          regex: 'node_exporter'
          action: keep
#            - pi-m.h.crlxs.io:9100
#            - pi-x.h.crlxs.io:9100
#            - pi-y.h.crlxs.io:9100
#            - pi-z.h.crlxs.io:9100
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: prometheus
        image: prom/prometheus
        volumeMounts:
          - name: config-volume
            mountPath: /etc/prometheus/prometheus.yml
            subPath: prometheus.yml
          - name: tsdb-volume
            mountPath: /prometheus
        ports:
        - containerPort: 9090
      volumes:
        - name: config-volume
          configMap:
           name: prometheus-config
        - name: tsdb-volume
          persistentVolumeClaim:
            claimName: prometheus-nfs-pvc
---
# Nodeport service to view prometheus web UI directly
apiVersion: v1
kind: Service
metadata:
  name: prometheus-websvc
  namespace: monitoring
spec:
  ports:
  - port: 9090
    protocol: TCP
    targetPort: 9090
    nodePort: 30090
  selector:
    app: prometheus
  sessionAffinity: None
  type: NodePort
---
# This is the ClusterIP service that grafana will use as a datasource
apiVersion: v1
kind: Service
metadata:
  namespace: monitoring
  name: prometheus-svc
spec:
  selector:
    app: prometheus
  ports:
  - protocol: TCP
    port: 9090
    targetPort: 9090
  sessionAffinity: None
---
